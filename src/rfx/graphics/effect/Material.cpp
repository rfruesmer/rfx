#include "rfx/pch.h"
#include "rfx/graphics/effect/Material.h"


using namespace rfx;
using namespace glm;
using namespace std;


// ---------------------------------------------------------------------------------------------------------------------

Material::Material(const Data& data)
    : data(data) {}

// ---------------------------------------------------------------------------------------------------------------------

void Material::setAmbient(const vec4& color)
{
    data.ambient = color;
}

// ---------------------------------------------------------------------------------------------------------------------

const vec4& Material::getAmbient() const
{
    return data.ambient;
}

// ---------------------------------------------------------------------------------------------------------------------

void Material::setDiffuse(const vec4& color)
{
    data.diffuse = color;
}

// ---------------------------------------------------------------------------------------------------------------------

const vec4& Material::getDiffuse() const
{
    return data.diffuse;
}

// ---------------------------------------------------------------------------------------------------------------------

void Material::setSpecular(const vec4& color)
{
    data.specular = color;
}

// ---------------------------------------------------------------------------------------------------------------------

const vec4& Material::getSpecular() const
{
    return data.specular;
}

// ---------------------------------------------------------------------------------------------------------------------

void Material::setEmissive(const vec4& color)
{
    data.emissive = color;
}

// ---------------------------------------------------------------------------------------------------------------------

const vec4& Material::getEmissive() const
{
    return data.emissive;
}

// ---------------------------------------------------------------------------------------------------------------------

void Material::setShininess(float value)
{
    data.shininess = value;
}

// ---------------------------------------------------------------------------------------------------------------------

float Material::getShininess() const
{
    return data.shininess;
}

// ---------------------------------------------------------------------------------------------------------------------

const Material::Data& Material::getData() const
{
    return data;
}

// ---------------------------------------------------------------------------------------------------------------------
